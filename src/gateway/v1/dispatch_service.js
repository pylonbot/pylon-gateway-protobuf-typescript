/* eslint-disable */
import Long from "long";
import { makeGenericClientConstructor, } from "@grpc/grpc-js";
import _m0 from "protobufjs/minimal";
import { EventEnvelope, EventEnvelopeAck, GuildCreateEvent, EventResponse, GuildUpdateEvent, GuildDeleteEvent, PresenceUpdateEvent, GuildMemberAddEvent, GuildMemberUpdateEvent, GuildMemberRemoveEvent, ChannelCreateEvent, ChannelUpdateEvent, ChannelDeleteEvent, ChannelPinsUpdateEvent, GuildRoleCreateEvent, GuildRoleUpdateEvent, GuildRoleDeleteEvent, MessageCreateEvent, MessageUpdateEvent, MessageDeleteEvent, MessageDeleteBulkEvent, MessageReactionAddEvent, MessageReactionRemoveEvent, MessageReactionRemoveAllEvent, MessageReactionRemoveEmojiEvent, TypingStartEvent, VoiceStateUpdateEvent, VoiceServerUpdateEvent, InviteCreateEvent, InviteDeleteEvent, GuildBanAddEvent, GuildBanRemoveEvent, GuildEmojisUpdateEvent, GuildIntegrationsUpdateEvent, WebhooksUpdateEvent, IntegrationCreateEvent, IntegrationUpdateEvent, IntegrationDeleteEvent, InteractionCreateEvent, InteractionResponse, } from "../../discord/v1/event";
export const protobufPackage = "pylon.gateway.v1.service";
export const GatewayDispatchStreamingService = {
    event: {
        path: "/pylon.gateway.v1.service.GatewayDispatchStreaming/Event",
        requestStream: true,
        responseStream: true,
        requestSerialize: (value) => Buffer.from(EventEnvelope.encode(value).finish()),
        requestDeserialize: (value) => EventEnvelope.decode(value),
        responseSerialize: (value) => Buffer.from(EventEnvelopeAck.encode(value).finish()),
        responseDeserialize: (value) => EventEnvelopeAck.decode(value),
    },
};
export const GatewayDispatchStreamingClient = makeGenericClientConstructor(GatewayDispatchStreamingService, "pylon.gateway.v1.service.GatewayDispatchStreaming");
export const GatewayDispatchService = {
    guildCreate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/GuildCreate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(GuildCreateEvent.encode(value).finish()),
        requestDeserialize: (value) => GuildCreateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    guildUpdate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/GuildUpdate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(GuildUpdateEvent.encode(value).finish()),
        requestDeserialize: (value) => GuildUpdateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    guildDelete: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/GuildDelete",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(GuildDeleteEvent.encode(value).finish()),
        requestDeserialize: (value) => GuildDeleteEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    presenceUpdate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/PresenceUpdate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(PresenceUpdateEvent.encode(value).finish()),
        requestDeserialize: (value) => PresenceUpdateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    guildMemberAdd: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/GuildMemberAdd",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(GuildMemberAddEvent.encode(value).finish()),
        requestDeserialize: (value) => GuildMemberAddEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    guildMemberUpdate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/GuildMemberUpdate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(GuildMemberUpdateEvent.encode(value).finish()),
        requestDeserialize: (value) => GuildMemberUpdateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    guildMemberRemove: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/GuildMemberRemove",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(GuildMemberRemoveEvent.encode(value).finish()),
        requestDeserialize: (value) => GuildMemberRemoveEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    channelCreate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/ChannelCreate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(ChannelCreateEvent.encode(value).finish()),
        requestDeserialize: (value) => ChannelCreateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    channelUpdate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/ChannelUpdate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(ChannelUpdateEvent.encode(value).finish()),
        requestDeserialize: (value) => ChannelUpdateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    channelDelete: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/ChannelDelete",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(ChannelDeleteEvent.encode(value).finish()),
        requestDeserialize: (value) => ChannelDeleteEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    channelPinsUpdate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/ChannelPinsUpdate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(ChannelPinsUpdateEvent.encode(value).finish()),
        requestDeserialize: (value) => ChannelPinsUpdateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    guildRoleCreate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/GuildRoleCreate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(GuildRoleCreateEvent.encode(value).finish()),
        requestDeserialize: (value) => GuildRoleCreateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    guildRoleUpdate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/GuildRoleUpdate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(GuildRoleUpdateEvent.encode(value).finish()),
        requestDeserialize: (value) => GuildRoleUpdateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    guildRoleDelete: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/GuildRoleDelete",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(GuildRoleDeleteEvent.encode(value).finish()),
        requestDeserialize: (value) => GuildRoleDeleteEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    messageCreate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/MessageCreate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(MessageCreateEvent.encode(value).finish()),
        requestDeserialize: (value) => MessageCreateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    messageUpdate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/MessageUpdate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(MessageUpdateEvent.encode(value).finish()),
        requestDeserialize: (value) => MessageUpdateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    messageDelete: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/MessageDelete",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(MessageDeleteEvent.encode(value).finish()),
        requestDeserialize: (value) => MessageDeleteEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    messageDeleteBulk: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/MessageDeleteBulk",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(MessageDeleteBulkEvent.encode(value).finish()),
        requestDeserialize: (value) => MessageDeleteBulkEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    messageReactionAdd: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/MessageReactionAdd",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(MessageReactionAddEvent.encode(value).finish()),
        requestDeserialize: (value) => MessageReactionAddEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    messageReactionRemove: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/MessageReactionRemove",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(MessageReactionRemoveEvent.encode(value).finish()),
        requestDeserialize: (value) => MessageReactionRemoveEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    messageReactionRemoveAll: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/MessageReactionRemoveAll",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(MessageReactionRemoveAllEvent.encode(value).finish()),
        requestDeserialize: (value) => MessageReactionRemoveAllEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    messageReactionRemoveEmoji: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/MessageReactionRemoveEmoji",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(MessageReactionRemoveEmojiEvent.encode(value).finish()),
        requestDeserialize: (value) => MessageReactionRemoveEmojiEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    typingStart: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/TypingStart",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(TypingStartEvent.encode(value).finish()),
        requestDeserialize: (value) => TypingStartEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    voiceStateUpdate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/VoiceStateUpdate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(VoiceStateUpdateEvent.encode(value).finish()),
        requestDeserialize: (value) => VoiceStateUpdateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    voiceServerUpdate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/VoiceServerUpdate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(VoiceServerUpdateEvent.encode(value).finish()),
        requestDeserialize: (value) => VoiceServerUpdateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    inviteCreate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/InviteCreate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(InviteCreateEvent.encode(value).finish()),
        requestDeserialize: (value) => InviteCreateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    inviteDelete: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/InviteDelete",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(InviteDeleteEvent.encode(value).finish()),
        requestDeserialize: (value) => InviteDeleteEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    guildBanAdd: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/GuildBanAdd",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(GuildBanAddEvent.encode(value).finish()),
        requestDeserialize: (value) => GuildBanAddEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    guildBanRemove: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/GuildBanRemove",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(GuildBanRemoveEvent.encode(value).finish()),
        requestDeserialize: (value) => GuildBanRemoveEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    guildEmojisUpdate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/GuildEmojisUpdate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(GuildEmojisUpdateEvent.encode(value).finish()),
        requestDeserialize: (value) => GuildEmojisUpdateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    guildIntegrationsUpdate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/GuildIntegrationsUpdate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(GuildIntegrationsUpdateEvent.encode(value).finish()),
        requestDeserialize: (value) => GuildIntegrationsUpdateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    webhooksUpdate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/WebhooksUpdate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(WebhooksUpdateEvent.encode(value).finish()),
        requestDeserialize: (value) => WebhooksUpdateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    integrationCreate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/IntegrationCreate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(IntegrationCreateEvent.encode(value).finish()),
        requestDeserialize: (value) => IntegrationCreateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    integrationUpdate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/IntegrationUpdate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(IntegrationUpdateEvent.encode(value).finish()),
        requestDeserialize: (value) => IntegrationUpdateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    integrationDelete: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/IntegrationDelete",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(IntegrationDeleteEvent.encode(value).finish()),
        requestDeserialize: (value) => IntegrationDeleteEvent.decode(value),
        responseSerialize: (value) => Buffer.from(EventResponse.encode(value).finish()),
        responseDeserialize: (value) => EventResponse.decode(value),
    },
    interactionCreate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/InteractionCreate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(InteractionCreateEvent.encode(value).finish()),
        requestDeserialize: (value) => InteractionCreateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(InteractionResponse.encode(value).finish()),
        responseDeserialize: (value) => InteractionResponse.decode(value),
    },
};
export const GatewayDispatchClient = makeGenericClientConstructor(GatewayDispatchService, "pylon.gateway.v1.service.GatewayDispatch");
if (_m0.util.Long !== Long) {
    _m0.util.Long = Long;
    _m0.configure();
}
