/// <reference types="node" />
import { ChannelCredentials, ChannelOptions, UntypedServiceImplementation, handleUnaryCall, Client, ClientUnaryCall, Metadata, CallOptions, ServiceError } from "@grpc/grpc-js";
import { ModifyGuildRequest, ModifyGuildResponse, CreateGuildChannelRequest, CreateGuildChannelResponse, ModifyGuildChannelPositionsRequest, ModifyGuildChannelPositionsResponse, AddGuildMemberRequest, AddGuildMemberResponse, ModifyGuildMemberRequest, ModifyGuildMemberResponse, ModifyCurrentUserNickRequest, ModifyCurrentUserNickResponse, AddGuildMemberRoleRequest, AddGuildMemberRoleResponse, RemoveGuildMemberRoleRequest, RemoveGuildMemberRoleResponse, RemoveGuildMemberRequest, RemoveGuildMemberResponse, GetGuildBansRequest, GetGuildBansResponse, GetGuildBanRequest, GetGuildBanResponse, CreateGuildBanRequest, CreateGuildBanResponse, RemoveGuildBanRequest, RemoveGuildBanResponse, CreateGuildRoleRequest, CreateGuildRoleResponse, ModifyGuildRolePositionsRequest, ModifyGuildRolePositionsResponse, ModifyGuildRoleRequest, ModifyGuildRoleResponse, DeleteGuildRoleRequest, DeleteGuildRoleResponse, GetGuildPruneCountRequest, GetGuildPruneCountResponse, BeginGuildPruneRequest, BeginGuildPruneResponse, GetGuildVoiceRegionsRequest, GetGuildVoiceRegionsResponse, GetGuildInvitesRequest, GetGuildInvitesResponse, ModifyChannelRequest, ModifyChannelResponse, DeleteChannelRequest, DeleteChannelResponse, GetChannelMessagesRequest, GetChannelMessagesResponse, GetChannelMessageRequest, GetChannelMessageResponse, CreateMessageRequest, CreateMessageResponse, CrosspostMessageRequest, CrosspostMessageResponse, CreateReactionRequest, CreateReactionResponse, DeleteOwnReactionRequest, DeleteOwnReactionResponse, DeleteUserReactionRequest, DeleteUserReactionResponse, DeleteAllReactionsRequest, DeleteAllReactionsResponse, DeleteAllReactionsForEmojiRequest, DeleteAllReactionsForEmojiResponse, EditMessageRequest, EditMessageResponse, DeleteMessageRequest, DeleteMessageResponse, BulkDeleteMessagesRequest, BulkDeleteMessagesResponse, EditChannelPermissionsRequest, EditChannelPermissionsResponse, GetChannelInvitesRequest, GetChannelInvitesResponse, CreateChannelInviteRequest, CreateChannelInviteResponse, DeleteChannelPermissionRequest, DeleteChannelPermissionResponse, FollowNewsChannelRequest, FollowNewsChannelResponse, TriggerTypingIndicatorRequest, TriggerTypingIndicatorResponse, GetPinnedMessagesRequest, GetPinnedMessagesResponse, AddPinnedChannelMessageRequest, AddPinnedChannelMessageResponse, DeletePinnedChannelMessageRequest, DeletePinnedChannelMessageResponse, ListGuildEmojisRequest, ListGuildEmojisResponse, GetGuildEmojiRequest, GetGuildEmojiResponse, CreateGuildEmojiRequest, CreateGuildEmojiResponse, ModifyGuildEmojiRequest, ModifyGuildEmojiResponse, DeleteGuildEmojiRequest, DeleteGuildEmojiResponse, GetCurrentUserRequest, GetCurrentUserResponse, GetUserRequest, GetUserResponse, ModifyCurrentUserRequest, ModifyCurrentUserResponse, LeaveGuildRequest, LeaveGuildResponse, CreateDmRequest, CreateDmResponse } from "../../discord/v1/rest";
export declare const protobufPackage = "pylon.gateway.v1.service";
export declare const GatewayRestService: {
    readonly modifyGuild: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/ModifyGuild";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: ModifyGuildRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => ModifyGuildRequest;
        readonly responseSerialize: (value: ModifyGuildResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => ModifyGuildResponse;
    };
    readonly createGuildChannel: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/CreateGuildChannel";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: CreateGuildChannelRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => CreateGuildChannelRequest;
        readonly responseSerialize: (value: CreateGuildChannelResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => CreateGuildChannelResponse;
    };
    readonly modifyGuildChannelPositions: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/ModifyGuildChannelPositions";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: ModifyGuildChannelPositionsRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => ModifyGuildChannelPositionsRequest;
        readonly responseSerialize: (value: ModifyGuildChannelPositionsResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => ModifyGuildChannelPositionsResponse;
    };
    readonly addGuildMember: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/AddGuildMember";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: AddGuildMemberRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => AddGuildMemberRequest;
        readonly responseSerialize: (value: AddGuildMemberResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => AddGuildMemberResponse;
    };
    readonly modifyGuildMember: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/ModifyGuildMember";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: ModifyGuildMemberRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => ModifyGuildMemberRequest;
        readonly responseSerialize: (value: ModifyGuildMemberResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => ModifyGuildMemberResponse;
    };
    readonly modifyCurrentUserNick: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/ModifyCurrentUserNick";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: ModifyCurrentUserNickRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => ModifyCurrentUserNickRequest;
        readonly responseSerialize: (value: ModifyCurrentUserNickResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => ModifyCurrentUserNickResponse;
    };
    readonly addGuildMemberRole: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/AddGuildMemberRole";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: AddGuildMemberRoleRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => AddGuildMemberRoleRequest;
        readonly responseSerialize: (value: AddGuildMemberRoleResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => AddGuildMemberRoleResponse;
    };
    readonly removeGuildMemberRole: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/RemoveGuildMemberRole";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: RemoveGuildMemberRoleRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => RemoveGuildMemberRoleRequest;
        readonly responseSerialize: (value: RemoveGuildMemberRoleResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => RemoveGuildMemberRoleResponse;
    };
    readonly removeGuildMember: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/RemoveGuildMember";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: RemoveGuildMemberRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => RemoveGuildMemberRequest;
        readonly responseSerialize: (value: RemoveGuildMemberResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => RemoveGuildMemberResponse;
    };
    readonly getGuildBans: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/GetGuildBans";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: GetGuildBansRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => GetGuildBansRequest;
        readonly responseSerialize: (value: GetGuildBansResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => GetGuildBansResponse;
    };
    readonly getGuildBan: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/GetGuildBan";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: GetGuildBanRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => GetGuildBanRequest;
        readonly responseSerialize: (value: GetGuildBanResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => GetGuildBanResponse;
    };
    readonly createGuildBan: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/CreateGuildBan";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: CreateGuildBanRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => CreateGuildBanRequest;
        readonly responseSerialize: (value: CreateGuildBanResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => CreateGuildBanResponse;
    };
    readonly removeGuildBan: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/RemoveGuildBan";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: RemoveGuildBanRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => RemoveGuildBanRequest;
        readonly responseSerialize: (value: RemoveGuildBanResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => RemoveGuildBanResponse;
    };
    readonly createGuildRole: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/CreateGuildRole";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: CreateGuildRoleRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => CreateGuildRoleRequest;
        readonly responseSerialize: (value: CreateGuildRoleResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => CreateGuildRoleResponse;
    };
    readonly modifyGuildRolePositions: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/ModifyGuildRolePositions";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: ModifyGuildRolePositionsRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => ModifyGuildRolePositionsRequest;
        readonly responseSerialize: (value: ModifyGuildRolePositionsResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => ModifyGuildRolePositionsResponse;
    };
    readonly modifyGuildRole: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/ModifyGuildRole";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: ModifyGuildRoleRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => ModifyGuildRoleRequest;
        readonly responseSerialize: (value: ModifyGuildRoleResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => ModifyGuildRoleResponse;
    };
    readonly deleteGuildRole: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/DeleteGuildRole";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: DeleteGuildRoleRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => DeleteGuildRoleRequest;
        readonly responseSerialize: (value: DeleteGuildRoleResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => DeleteGuildRoleResponse;
    };
    readonly getGuildPruneCount: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/GetGuildPruneCount";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: GetGuildPruneCountRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => GetGuildPruneCountRequest;
        readonly responseSerialize: (value: GetGuildPruneCountResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => GetGuildPruneCountResponse;
    };
    readonly beginGuildPrune: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/BeginGuildPrune";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: BeginGuildPruneRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => BeginGuildPruneRequest;
        readonly responseSerialize: (value: BeginGuildPruneResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => BeginGuildPruneResponse;
    };
    readonly getGuildVoiceRegions: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/GetGuildVoiceRegions";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: GetGuildVoiceRegionsRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => GetGuildVoiceRegionsRequest;
        readonly responseSerialize: (value: GetGuildVoiceRegionsResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => GetGuildVoiceRegionsResponse;
    };
    readonly getGuildInvites: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/GetGuildInvites";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: GetGuildInvitesRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => GetGuildInvitesRequest;
        readonly responseSerialize: (value: GetGuildInvitesResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => GetGuildInvitesResponse;
    };
    readonly modifyChannel: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/ModifyChannel";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: ModifyChannelRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => ModifyChannelRequest;
        readonly responseSerialize: (value: ModifyChannelResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => ModifyChannelResponse;
    };
    readonly deleteChannel: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/DeleteChannel";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: DeleteChannelRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => DeleteChannelRequest;
        readonly responseSerialize: (value: DeleteChannelResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => DeleteChannelResponse;
    };
    readonly getChannelMessages: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/GetChannelMessages";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: GetChannelMessagesRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => GetChannelMessagesRequest;
        readonly responseSerialize: (value: GetChannelMessagesResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => GetChannelMessagesResponse;
    };
    readonly getChannelMessage: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/GetChannelMessage";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: GetChannelMessageRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => GetChannelMessageRequest;
        readonly responseSerialize: (value: GetChannelMessageResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => GetChannelMessageResponse;
    };
    readonly createMessage: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/CreateMessage";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: CreateMessageRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => CreateMessageRequest;
        readonly responseSerialize: (value: CreateMessageResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => CreateMessageResponse;
    };
    readonly crosspostMessage: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/CrosspostMessage";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: CrosspostMessageRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => CrosspostMessageRequest;
        readonly responseSerialize: (value: CrosspostMessageResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => CrosspostMessageResponse;
    };
    readonly createReaction: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/CreateReaction";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: CreateReactionRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => CreateReactionRequest;
        readonly responseSerialize: (value: CreateReactionResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => CreateReactionResponse;
    };
    readonly deleteOwnReaction: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/DeleteOwnReaction";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: DeleteOwnReactionRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => DeleteOwnReactionRequest;
        readonly responseSerialize: (value: DeleteOwnReactionResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => DeleteOwnReactionResponse;
    };
    readonly deleteUserReaction: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/DeleteUserReaction";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: DeleteUserReactionRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => DeleteUserReactionRequest;
        readonly responseSerialize: (value: DeleteUserReactionResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => DeleteUserReactionResponse;
    };
    readonly deleteAllReactions: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/DeleteAllReactions";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: DeleteAllReactionsRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => DeleteAllReactionsRequest;
        readonly responseSerialize: (value: DeleteAllReactionsResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => DeleteAllReactionsResponse;
    };
    readonly deleteAllReactionsForEmoji: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/DeleteAllReactionsForEmoji";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: DeleteAllReactionsForEmojiRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => DeleteAllReactionsForEmojiRequest;
        readonly responseSerialize: (value: DeleteAllReactionsForEmojiResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => DeleteAllReactionsForEmojiResponse;
    };
    readonly editMessage: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/EditMessage";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: EditMessageRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => EditMessageRequest;
        readonly responseSerialize: (value: EditMessageResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => EditMessageResponse;
    };
    readonly deleteMessage: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/DeleteMessage";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: DeleteMessageRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => DeleteMessageRequest;
        readonly responseSerialize: (value: DeleteMessageResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => DeleteMessageResponse;
    };
    readonly bulkDeleteMessages: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/BulkDeleteMessages";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: BulkDeleteMessagesRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => BulkDeleteMessagesRequest;
        readonly responseSerialize: (value: BulkDeleteMessagesResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => BulkDeleteMessagesResponse;
    };
    readonly editChannelPermissions: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/EditChannelPermissions";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: EditChannelPermissionsRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => EditChannelPermissionsRequest;
        readonly responseSerialize: (value: EditChannelPermissionsResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => EditChannelPermissionsResponse;
    };
    readonly getChannelInvites: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/GetChannelInvites";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: GetChannelInvitesRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => GetChannelInvitesRequest;
        readonly responseSerialize: (value: GetChannelInvitesResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => GetChannelInvitesResponse;
    };
    readonly createChannelInvite: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/CreateChannelInvite";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: CreateChannelInviteRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => CreateChannelInviteRequest;
        readonly responseSerialize: (value: CreateChannelInviteResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => CreateChannelInviteResponse;
    };
    readonly deleteChannelPermission: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/DeleteChannelPermission";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: DeleteChannelPermissionRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => DeleteChannelPermissionRequest;
        readonly responseSerialize: (value: DeleteChannelPermissionResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => DeleteChannelPermissionResponse;
    };
    readonly followNewsChannel: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/FollowNewsChannel";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: FollowNewsChannelRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => FollowNewsChannelRequest;
        readonly responseSerialize: (value: FollowNewsChannelResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => FollowNewsChannelResponse;
    };
    readonly triggerTypingIndicator: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/TriggerTypingIndicator";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: TriggerTypingIndicatorRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => TriggerTypingIndicatorRequest;
        readonly responseSerialize: (value: TriggerTypingIndicatorResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => TriggerTypingIndicatorResponse;
    };
    readonly getPinnedMessages: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/GetPinnedMessages";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: GetPinnedMessagesRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => GetPinnedMessagesRequest;
        readonly responseSerialize: (value: GetPinnedMessagesResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => GetPinnedMessagesResponse;
    };
    readonly addPinnedChannelMessage: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/AddPinnedChannelMessage";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: AddPinnedChannelMessageRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => AddPinnedChannelMessageRequest;
        readonly responseSerialize: (value: AddPinnedChannelMessageResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => AddPinnedChannelMessageResponse;
    };
    readonly deletePinnedChannelMessage: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/DeletePinnedChannelMessage";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: DeletePinnedChannelMessageRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => DeletePinnedChannelMessageRequest;
        readonly responseSerialize: (value: DeletePinnedChannelMessageResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => DeletePinnedChannelMessageResponse;
    };
    readonly listGuildEmojis: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/ListGuildEmojis";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: ListGuildEmojisRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => ListGuildEmojisRequest;
        readonly responseSerialize: (value: ListGuildEmojisResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => ListGuildEmojisResponse;
    };
    readonly getGuildEmoji: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/GetGuildEmoji";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: GetGuildEmojiRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => GetGuildEmojiRequest;
        readonly responseSerialize: (value: GetGuildEmojiResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => GetGuildEmojiResponse;
    };
    readonly createGuildEmoji: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/CreateGuildEmoji";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: CreateGuildEmojiRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => CreateGuildEmojiRequest;
        readonly responseSerialize: (value: CreateGuildEmojiResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => CreateGuildEmojiResponse;
    };
    readonly modifyGuildEmoji: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/ModifyGuildEmoji";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: ModifyGuildEmojiRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => ModifyGuildEmojiRequest;
        readonly responseSerialize: (value: ModifyGuildEmojiResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => ModifyGuildEmojiResponse;
    };
    readonly deleteGuildEmoji: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/DeleteGuildEmoji";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: DeleteGuildEmojiRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => DeleteGuildEmojiRequest;
        readonly responseSerialize: (value: DeleteGuildEmojiResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => DeleteGuildEmojiResponse;
    };
    readonly getCurrentUser: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/GetCurrentUser";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: GetCurrentUserRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => GetCurrentUserRequest;
        readonly responseSerialize: (value: GetCurrentUserResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => GetCurrentUserResponse;
    };
    readonly getUser: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/GetUser";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: GetUserRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => GetUserRequest;
        readonly responseSerialize: (value: GetUserResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => GetUserResponse;
    };
    readonly modifyCurrentUser: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/ModifyCurrentUser";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: ModifyCurrentUserRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => ModifyCurrentUserRequest;
        readonly responseSerialize: (value: ModifyCurrentUserResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => ModifyCurrentUserResponse;
    };
    readonly leaveGuild: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/LeaveGuild";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: LeaveGuildRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => LeaveGuildRequest;
        readonly responseSerialize: (value: LeaveGuildResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => LeaveGuildResponse;
    };
    readonly createDm: {
        readonly path: "/pylon.gateway.v1.service.GatewayRest/CreateDm";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: CreateDmRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => CreateDmRequest;
        readonly responseSerialize: (value: CreateDmResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => CreateDmResponse;
    };
};
export interface GatewayRestServer extends UntypedServiceImplementation {
    modifyGuild: handleUnaryCall<ModifyGuildRequest, ModifyGuildResponse>;
    createGuildChannel: handleUnaryCall<CreateGuildChannelRequest, CreateGuildChannelResponse>;
    modifyGuildChannelPositions: handleUnaryCall<ModifyGuildChannelPositionsRequest, ModifyGuildChannelPositionsResponse>;
    addGuildMember: handleUnaryCall<AddGuildMemberRequest, AddGuildMemberResponse>;
    modifyGuildMember: handleUnaryCall<ModifyGuildMemberRequest, ModifyGuildMemberResponse>;
    modifyCurrentUserNick: handleUnaryCall<ModifyCurrentUserNickRequest, ModifyCurrentUserNickResponse>;
    addGuildMemberRole: handleUnaryCall<AddGuildMemberRoleRequest, AddGuildMemberRoleResponse>;
    removeGuildMemberRole: handleUnaryCall<RemoveGuildMemberRoleRequest, RemoveGuildMemberRoleResponse>;
    removeGuildMember: handleUnaryCall<RemoveGuildMemberRequest, RemoveGuildMemberResponse>;
    getGuildBans: handleUnaryCall<GetGuildBansRequest, GetGuildBansResponse>;
    getGuildBan: handleUnaryCall<GetGuildBanRequest, GetGuildBanResponse>;
    createGuildBan: handleUnaryCall<CreateGuildBanRequest, CreateGuildBanResponse>;
    removeGuildBan: handleUnaryCall<RemoveGuildBanRequest, RemoveGuildBanResponse>;
    createGuildRole: handleUnaryCall<CreateGuildRoleRequest, CreateGuildRoleResponse>;
    modifyGuildRolePositions: handleUnaryCall<ModifyGuildRolePositionsRequest, ModifyGuildRolePositionsResponse>;
    modifyGuildRole: handleUnaryCall<ModifyGuildRoleRequest, ModifyGuildRoleResponse>;
    deleteGuildRole: handleUnaryCall<DeleteGuildRoleRequest, DeleteGuildRoleResponse>;
    getGuildPruneCount: handleUnaryCall<GetGuildPruneCountRequest, GetGuildPruneCountResponse>;
    beginGuildPrune: handleUnaryCall<BeginGuildPruneRequest, BeginGuildPruneResponse>;
    getGuildVoiceRegions: handleUnaryCall<GetGuildVoiceRegionsRequest, GetGuildVoiceRegionsResponse>;
    getGuildInvites: handleUnaryCall<GetGuildInvitesRequest, GetGuildInvitesResponse>;
    modifyChannel: handleUnaryCall<ModifyChannelRequest, ModifyChannelResponse>;
    deleteChannel: handleUnaryCall<DeleteChannelRequest, DeleteChannelResponse>;
    getChannelMessages: handleUnaryCall<GetChannelMessagesRequest, GetChannelMessagesResponse>;
    getChannelMessage: handleUnaryCall<GetChannelMessageRequest, GetChannelMessageResponse>;
    createMessage: handleUnaryCall<CreateMessageRequest, CreateMessageResponse>;
    crosspostMessage: handleUnaryCall<CrosspostMessageRequest, CrosspostMessageResponse>;
    createReaction: handleUnaryCall<CreateReactionRequest, CreateReactionResponse>;
    deleteOwnReaction: handleUnaryCall<DeleteOwnReactionRequest, DeleteOwnReactionResponse>;
    deleteUserReaction: handleUnaryCall<DeleteUserReactionRequest, DeleteUserReactionResponse>;
    deleteAllReactions: handleUnaryCall<DeleteAllReactionsRequest, DeleteAllReactionsResponse>;
    deleteAllReactionsForEmoji: handleUnaryCall<DeleteAllReactionsForEmojiRequest, DeleteAllReactionsForEmojiResponse>;
    editMessage: handleUnaryCall<EditMessageRequest, EditMessageResponse>;
    deleteMessage: handleUnaryCall<DeleteMessageRequest, DeleteMessageResponse>;
    bulkDeleteMessages: handleUnaryCall<BulkDeleteMessagesRequest, BulkDeleteMessagesResponse>;
    editChannelPermissions: handleUnaryCall<EditChannelPermissionsRequest, EditChannelPermissionsResponse>;
    getChannelInvites: handleUnaryCall<GetChannelInvitesRequest, GetChannelInvitesResponse>;
    createChannelInvite: handleUnaryCall<CreateChannelInviteRequest, CreateChannelInviteResponse>;
    deleteChannelPermission: handleUnaryCall<DeleteChannelPermissionRequest, DeleteChannelPermissionResponse>;
    followNewsChannel: handleUnaryCall<FollowNewsChannelRequest, FollowNewsChannelResponse>;
    triggerTypingIndicator: handleUnaryCall<TriggerTypingIndicatorRequest, TriggerTypingIndicatorResponse>;
    getPinnedMessages: handleUnaryCall<GetPinnedMessagesRequest, GetPinnedMessagesResponse>;
    addPinnedChannelMessage: handleUnaryCall<AddPinnedChannelMessageRequest, AddPinnedChannelMessageResponse>;
    deletePinnedChannelMessage: handleUnaryCall<DeletePinnedChannelMessageRequest, DeletePinnedChannelMessageResponse>;
    listGuildEmojis: handleUnaryCall<ListGuildEmojisRequest, ListGuildEmojisResponse>;
    getGuildEmoji: handleUnaryCall<GetGuildEmojiRequest, GetGuildEmojiResponse>;
    createGuildEmoji: handleUnaryCall<CreateGuildEmojiRequest, CreateGuildEmojiResponse>;
    modifyGuildEmoji: handleUnaryCall<ModifyGuildEmojiRequest, ModifyGuildEmojiResponse>;
    deleteGuildEmoji: handleUnaryCall<DeleteGuildEmojiRequest, DeleteGuildEmojiResponse>;
    getCurrentUser: handleUnaryCall<GetCurrentUserRequest, GetCurrentUserResponse>;
    getUser: handleUnaryCall<GetUserRequest, GetUserResponse>;
    modifyCurrentUser: handleUnaryCall<ModifyCurrentUserRequest, ModifyCurrentUserResponse>;
    leaveGuild: handleUnaryCall<LeaveGuildRequest, LeaveGuildResponse>;
    createDm: handleUnaryCall<CreateDmRequest, CreateDmResponse>;
}
export interface GatewayRestClient extends Client {
    modifyGuild(request: ModifyGuildRequest, callback: (error: ServiceError | null, response: ModifyGuildResponse) => void): ClientUnaryCall;
    modifyGuild(request: ModifyGuildRequest, metadata: Metadata, callback: (error: ServiceError | null, response: ModifyGuildResponse) => void): ClientUnaryCall;
    modifyGuild(request: ModifyGuildRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: ModifyGuildResponse) => void): ClientUnaryCall;
    createGuildChannel(request: CreateGuildChannelRequest, callback: (error: ServiceError | null, response: CreateGuildChannelResponse) => void): ClientUnaryCall;
    createGuildChannel(request: CreateGuildChannelRequest, metadata: Metadata, callback: (error: ServiceError | null, response: CreateGuildChannelResponse) => void): ClientUnaryCall;
    createGuildChannel(request: CreateGuildChannelRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: CreateGuildChannelResponse) => void): ClientUnaryCall;
    modifyGuildChannelPositions(request: ModifyGuildChannelPositionsRequest, callback: (error: ServiceError | null, response: ModifyGuildChannelPositionsResponse) => void): ClientUnaryCall;
    modifyGuildChannelPositions(request: ModifyGuildChannelPositionsRequest, metadata: Metadata, callback: (error: ServiceError | null, response: ModifyGuildChannelPositionsResponse) => void): ClientUnaryCall;
    modifyGuildChannelPositions(request: ModifyGuildChannelPositionsRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: ModifyGuildChannelPositionsResponse) => void): ClientUnaryCall;
    addGuildMember(request: AddGuildMemberRequest, callback: (error: ServiceError | null, response: AddGuildMemberResponse) => void): ClientUnaryCall;
    addGuildMember(request: AddGuildMemberRequest, metadata: Metadata, callback: (error: ServiceError | null, response: AddGuildMemberResponse) => void): ClientUnaryCall;
    addGuildMember(request: AddGuildMemberRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: AddGuildMemberResponse) => void): ClientUnaryCall;
    modifyGuildMember(request: ModifyGuildMemberRequest, callback: (error: ServiceError | null, response: ModifyGuildMemberResponse) => void): ClientUnaryCall;
    modifyGuildMember(request: ModifyGuildMemberRequest, metadata: Metadata, callback: (error: ServiceError | null, response: ModifyGuildMemberResponse) => void): ClientUnaryCall;
    modifyGuildMember(request: ModifyGuildMemberRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: ModifyGuildMemberResponse) => void): ClientUnaryCall;
    modifyCurrentUserNick(request: ModifyCurrentUserNickRequest, callback: (error: ServiceError | null, response: ModifyCurrentUserNickResponse) => void): ClientUnaryCall;
    modifyCurrentUserNick(request: ModifyCurrentUserNickRequest, metadata: Metadata, callback: (error: ServiceError | null, response: ModifyCurrentUserNickResponse) => void): ClientUnaryCall;
    modifyCurrentUserNick(request: ModifyCurrentUserNickRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: ModifyCurrentUserNickResponse) => void): ClientUnaryCall;
    addGuildMemberRole(request: AddGuildMemberRoleRequest, callback: (error: ServiceError | null, response: AddGuildMemberRoleResponse) => void): ClientUnaryCall;
    addGuildMemberRole(request: AddGuildMemberRoleRequest, metadata: Metadata, callback: (error: ServiceError | null, response: AddGuildMemberRoleResponse) => void): ClientUnaryCall;
    addGuildMemberRole(request: AddGuildMemberRoleRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: AddGuildMemberRoleResponse) => void): ClientUnaryCall;
    removeGuildMemberRole(request: RemoveGuildMemberRoleRequest, callback: (error: ServiceError | null, response: RemoveGuildMemberRoleResponse) => void): ClientUnaryCall;
    removeGuildMemberRole(request: RemoveGuildMemberRoleRequest, metadata: Metadata, callback: (error: ServiceError | null, response: RemoveGuildMemberRoleResponse) => void): ClientUnaryCall;
    removeGuildMemberRole(request: RemoveGuildMemberRoleRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: RemoveGuildMemberRoleResponse) => void): ClientUnaryCall;
    removeGuildMember(request: RemoveGuildMemberRequest, callback: (error: ServiceError | null, response: RemoveGuildMemberResponse) => void): ClientUnaryCall;
    removeGuildMember(request: RemoveGuildMemberRequest, metadata: Metadata, callback: (error: ServiceError | null, response: RemoveGuildMemberResponse) => void): ClientUnaryCall;
    removeGuildMember(request: RemoveGuildMemberRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: RemoveGuildMemberResponse) => void): ClientUnaryCall;
    getGuildBans(request: GetGuildBansRequest, callback: (error: ServiceError | null, response: GetGuildBansResponse) => void): ClientUnaryCall;
    getGuildBans(request: GetGuildBansRequest, metadata: Metadata, callback: (error: ServiceError | null, response: GetGuildBansResponse) => void): ClientUnaryCall;
    getGuildBans(request: GetGuildBansRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: GetGuildBansResponse) => void): ClientUnaryCall;
    getGuildBan(request: GetGuildBanRequest, callback: (error: ServiceError | null, response: GetGuildBanResponse) => void): ClientUnaryCall;
    getGuildBan(request: GetGuildBanRequest, metadata: Metadata, callback: (error: ServiceError | null, response: GetGuildBanResponse) => void): ClientUnaryCall;
    getGuildBan(request: GetGuildBanRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: GetGuildBanResponse) => void): ClientUnaryCall;
    createGuildBan(request: CreateGuildBanRequest, callback: (error: ServiceError | null, response: CreateGuildBanResponse) => void): ClientUnaryCall;
    createGuildBan(request: CreateGuildBanRequest, metadata: Metadata, callback: (error: ServiceError | null, response: CreateGuildBanResponse) => void): ClientUnaryCall;
    createGuildBan(request: CreateGuildBanRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: CreateGuildBanResponse) => void): ClientUnaryCall;
    removeGuildBan(request: RemoveGuildBanRequest, callback: (error: ServiceError | null, response: RemoveGuildBanResponse) => void): ClientUnaryCall;
    removeGuildBan(request: RemoveGuildBanRequest, metadata: Metadata, callback: (error: ServiceError | null, response: RemoveGuildBanResponse) => void): ClientUnaryCall;
    removeGuildBan(request: RemoveGuildBanRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: RemoveGuildBanResponse) => void): ClientUnaryCall;
    createGuildRole(request: CreateGuildRoleRequest, callback: (error: ServiceError | null, response: CreateGuildRoleResponse) => void): ClientUnaryCall;
    createGuildRole(request: CreateGuildRoleRequest, metadata: Metadata, callback: (error: ServiceError | null, response: CreateGuildRoleResponse) => void): ClientUnaryCall;
    createGuildRole(request: CreateGuildRoleRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: CreateGuildRoleResponse) => void): ClientUnaryCall;
    modifyGuildRolePositions(request: ModifyGuildRolePositionsRequest, callback: (error: ServiceError | null, response: ModifyGuildRolePositionsResponse) => void): ClientUnaryCall;
    modifyGuildRolePositions(request: ModifyGuildRolePositionsRequest, metadata: Metadata, callback: (error: ServiceError | null, response: ModifyGuildRolePositionsResponse) => void): ClientUnaryCall;
    modifyGuildRolePositions(request: ModifyGuildRolePositionsRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: ModifyGuildRolePositionsResponse) => void): ClientUnaryCall;
    modifyGuildRole(request: ModifyGuildRoleRequest, callback: (error: ServiceError | null, response: ModifyGuildRoleResponse) => void): ClientUnaryCall;
    modifyGuildRole(request: ModifyGuildRoleRequest, metadata: Metadata, callback: (error: ServiceError | null, response: ModifyGuildRoleResponse) => void): ClientUnaryCall;
    modifyGuildRole(request: ModifyGuildRoleRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: ModifyGuildRoleResponse) => void): ClientUnaryCall;
    deleteGuildRole(request: DeleteGuildRoleRequest, callback: (error: ServiceError | null, response: DeleteGuildRoleResponse) => void): ClientUnaryCall;
    deleteGuildRole(request: DeleteGuildRoleRequest, metadata: Metadata, callback: (error: ServiceError | null, response: DeleteGuildRoleResponse) => void): ClientUnaryCall;
    deleteGuildRole(request: DeleteGuildRoleRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: DeleteGuildRoleResponse) => void): ClientUnaryCall;
    getGuildPruneCount(request: GetGuildPruneCountRequest, callback: (error: ServiceError | null, response: GetGuildPruneCountResponse) => void): ClientUnaryCall;
    getGuildPruneCount(request: GetGuildPruneCountRequest, metadata: Metadata, callback: (error: ServiceError | null, response: GetGuildPruneCountResponse) => void): ClientUnaryCall;
    getGuildPruneCount(request: GetGuildPruneCountRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: GetGuildPruneCountResponse) => void): ClientUnaryCall;
    beginGuildPrune(request: BeginGuildPruneRequest, callback: (error: ServiceError | null, response: BeginGuildPruneResponse) => void): ClientUnaryCall;
    beginGuildPrune(request: BeginGuildPruneRequest, metadata: Metadata, callback: (error: ServiceError | null, response: BeginGuildPruneResponse) => void): ClientUnaryCall;
    beginGuildPrune(request: BeginGuildPruneRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: BeginGuildPruneResponse) => void): ClientUnaryCall;
    getGuildVoiceRegions(request: GetGuildVoiceRegionsRequest, callback: (error: ServiceError | null, response: GetGuildVoiceRegionsResponse) => void): ClientUnaryCall;
    getGuildVoiceRegions(request: GetGuildVoiceRegionsRequest, metadata: Metadata, callback: (error: ServiceError | null, response: GetGuildVoiceRegionsResponse) => void): ClientUnaryCall;
    getGuildVoiceRegions(request: GetGuildVoiceRegionsRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: GetGuildVoiceRegionsResponse) => void): ClientUnaryCall;
    getGuildInvites(request: GetGuildInvitesRequest, callback: (error: ServiceError | null, response: GetGuildInvitesResponse) => void): ClientUnaryCall;
    getGuildInvites(request: GetGuildInvitesRequest, metadata: Metadata, callback: (error: ServiceError | null, response: GetGuildInvitesResponse) => void): ClientUnaryCall;
    getGuildInvites(request: GetGuildInvitesRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: GetGuildInvitesResponse) => void): ClientUnaryCall;
    modifyChannel(request: ModifyChannelRequest, callback: (error: ServiceError | null, response: ModifyChannelResponse) => void): ClientUnaryCall;
    modifyChannel(request: ModifyChannelRequest, metadata: Metadata, callback: (error: ServiceError | null, response: ModifyChannelResponse) => void): ClientUnaryCall;
    modifyChannel(request: ModifyChannelRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: ModifyChannelResponse) => void): ClientUnaryCall;
    deleteChannel(request: DeleteChannelRequest, callback: (error: ServiceError | null, response: DeleteChannelResponse) => void): ClientUnaryCall;
    deleteChannel(request: DeleteChannelRequest, metadata: Metadata, callback: (error: ServiceError | null, response: DeleteChannelResponse) => void): ClientUnaryCall;
    deleteChannel(request: DeleteChannelRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: DeleteChannelResponse) => void): ClientUnaryCall;
    getChannelMessages(request: GetChannelMessagesRequest, callback: (error: ServiceError | null, response: GetChannelMessagesResponse) => void): ClientUnaryCall;
    getChannelMessages(request: GetChannelMessagesRequest, metadata: Metadata, callback: (error: ServiceError | null, response: GetChannelMessagesResponse) => void): ClientUnaryCall;
    getChannelMessages(request: GetChannelMessagesRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: GetChannelMessagesResponse) => void): ClientUnaryCall;
    getChannelMessage(request: GetChannelMessageRequest, callback: (error: ServiceError | null, response: GetChannelMessageResponse) => void): ClientUnaryCall;
    getChannelMessage(request: GetChannelMessageRequest, metadata: Metadata, callback: (error: ServiceError | null, response: GetChannelMessageResponse) => void): ClientUnaryCall;
    getChannelMessage(request: GetChannelMessageRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: GetChannelMessageResponse) => void): ClientUnaryCall;
    createMessage(request: CreateMessageRequest, callback: (error: ServiceError | null, response: CreateMessageResponse) => void): ClientUnaryCall;
    createMessage(request: CreateMessageRequest, metadata: Metadata, callback: (error: ServiceError | null, response: CreateMessageResponse) => void): ClientUnaryCall;
    createMessage(request: CreateMessageRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: CreateMessageResponse) => void): ClientUnaryCall;
    crosspostMessage(request: CrosspostMessageRequest, callback: (error: ServiceError | null, response: CrosspostMessageResponse) => void): ClientUnaryCall;
    crosspostMessage(request: CrosspostMessageRequest, metadata: Metadata, callback: (error: ServiceError | null, response: CrosspostMessageResponse) => void): ClientUnaryCall;
    crosspostMessage(request: CrosspostMessageRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: CrosspostMessageResponse) => void): ClientUnaryCall;
    createReaction(request: CreateReactionRequest, callback: (error: ServiceError | null, response: CreateReactionResponse) => void): ClientUnaryCall;
    createReaction(request: CreateReactionRequest, metadata: Metadata, callback: (error: ServiceError | null, response: CreateReactionResponse) => void): ClientUnaryCall;
    createReaction(request: CreateReactionRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: CreateReactionResponse) => void): ClientUnaryCall;
    deleteOwnReaction(request: DeleteOwnReactionRequest, callback: (error: ServiceError | null, response: DeleteOwnReactionResponse) => void): ClientUnaryCall;
    deleteOwnReaction(request: DeleteOwnReactionRequest, metadata: Metadata, callback: (error: ServiceError | null, response: DeleteOwnReactionResponse) => void): ClientUnaryCall;
    deleteOwnReaction(request: DeleteOwnReactionRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: DeleteOwnReactionResponse) => void): ClientUnaryCall;
    deleteUserReaction(request: DeleteUserReactionRequest, callback: (error: ServiceError | null, response: DeleteUserReactionResponse) => void): ClientUnaryCall;
    deleteUserReaction(request: DeleteUserReactionRequest, metadata: Metadata, callback: (error: ServiceError | null, response: DeleteUserReactionResponse) => void): ClientUnaryCall;
    deleteUserReaction(request: DeleteUserReactionRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: DeleteUserReactionResponse) => void): ClientUnaryCall;
    deleteAllReactions(request: DeleteAllReactionsRequest, callback: (error: ServiceError | null, response: DeleteAllReactionsResponse) => void): ClientUnaryCall;
    deleteAllReactions(request: DeleteAllReactionsRequest, metadata: Metadata, callback: (error: ServiceError | null, response: DeleteAllReactionsResponse) => void): ClientUnaryCall;
    deleteAllReactions(request: DeleteAllReactionsRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: DeleteAllReactionsResponse) => void): ClientUnaryCall;
    deleteAllReactionsForEmoji(request: DeleteAllReactionsForEmojiRequest, callback: (error: ServiceError | null, response: DeleteAllReactionsForEmojiResponse) => void): ClientUnaryCall;
    deleteAllReactionsForEmoji(request: DeleteAllReactionsForEmojiRequest, metadata: Metadata, callback: (error: ServiceError | null, response: DeleteAllReactionsForEmojiResponse) => void): ClientUnaryCall;
    deleteAllReactionsForEmoji(request: DeleteAllReactionsForEmojiRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: DeleteAllReactionsForEmojiResponse) => void): ClientUnaryCall;
    editMessage(request: EditMessageRequest, callback: (error: ServiceError | null, response: EditMessageResponse) => void): ClientUnaryCall;
    editMessage(request: EditMessageRequest, metadata: Metadata, callback: (error: ServiceError | null, response: EditMessageResponse) => void): ClientUnaryCall;
    editMessage(request: EditMessageRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: EditMessageResponse) => void): ClientUnaryCall;
    deleteMessage(request: DeleteMessageRequest, callback: (error: ServiceError | null, response: DeleteMessageResponse) => void): ClientUnaryCall;
    deleteMessage(request: DeleteMessageRequest, metadata: Metadata, callback: (error: ServiceError | null, response: DeleteMessageResponse) => void): ClientUnaryCall;
    deleteMessage(request: DeleteMessageRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: DeleteMessageResponse) => void): ClientUnaryCall;
    bulkDeleteMessages(request: BulkDeleteMessagesRequest, callback: (error: ServiceError | null, response: BulkDeleteMessagesResponse) => void): ClientUnaryCall;
    bulkDeleteMessages(request: BulkDeleteMessagesRequest, metadata: Metadata, callback: (error: ServiceError | null, response: BulkDeleteMessagesResponse) => void): ClientUnaryCall;
    bulkDeleteMessages(request: BulkDeleteMessagesRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: BulkDeleteMessagesResponse) => void): ClientUnaryCall;
    editChannelPermissions(request: EditChannelPermissionsRequest, callback: (error: ServiceError | null, response: EditChannelPermissionsResponse) => void): ClientUnaryCall;
    editChannelPermissions(request: EditChannelPermissionsRequest, metadata: Metadata, callback: (error: ServiceError | null, response: EditChannelPermissionsResponse) => void): ClientUnaryCall;
    editChannelPermissions(request: EditChannelPermissionsRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: EditChannelPermissionsResponse) => void): ClientUnaryCall;
    getChannelInvites(request: GetChannelInvitesRequest, callback: (error: ServiceError | null, response: GetChannelInvitesResponse) => void): ClientUnaryCall;
    getChannelInvites(request: GetChannelInvitesRequest, metadata: Metadata, callback: (error: ServiceError | null, response: GetChannelInvitesResponse) => void): ClientUnaryCall;
    getChannelInvites(request: GetChannelInvitesRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: GetChannelInvitesResponse) => void): ClientUnaryCall;
    createChannelInvite(request: CreateChannelInviteRequest, callback: (error: ServiceError | null, response: CreateChannelInviteResponse) => void): ClientUnaryCall;
    createChannelInvite(request: CreateChannelInviteRequest, metadata: Metadata, callback: (error: ServiceError | null, response: CreateChannelInviteResponse) => void): ClientUnaryCall;
    createChannelInvite(request: CreateChannelInviteRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: CreateChannelInviteResponse) => void): ClientUnaryCall;
    deleteChannelPermission(request: DeleteChannelPermissionRequest, callback: (error: ServiceError | null, response: DeleteChannelPermissionResponse) => void): ClientUnaryCall;
    deleteChannelPermission(request: DeleteChannelPermissionRequest, metadata: Metadata, callback: (error: ServiceError | null, response: DeleteChannelPermissionResponse) => void): ClientUnaryCall;
    deleteChannelPermission(request: DeleteChannelPermissionRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: DeleteChannelPermissionResponse) => void): ClientUnaryCall;
    followNewsChannel(request: FollowNewsChannelRequest, callback: (error: ServiceError | null, response: FollowNewsChannelResponse) => void): ClientUnaryCall;
    followNewsChannel(request: FollowNewsChannelRequest, metadata: Metadata, callback: (error: ServiceError | null, response: FollowNewsChannelResponse) => void): ClientUnaryCall;
    followNewsChannel(request: FollowNewsChannelRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: FollowNewsChannelResponse) => void): ClientUnaryCall;
    triggerTypingIndicator(request: TriggerTypingIndicatorRequest, callback: (error: ServiceError | null, response: TriggerTypingIndicatorResponse) => void): ClientUnaryCall;
    triggerTypingIndicator(request: TriggerTypingIndicatorRequest, metadata: Metadata, callback: (error: ServiceError | null, response: TriggerTypingIndicatorResponse) => void): ClientUnaryCall;
    triggerTypingIndicator(request: TriggerTypingIndicatorRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: TriggerTypingIndicatorResponse) => void): ClientUnaryCall;
    getPinnedMessages(request: GetPinnedMessagesRequest, callback: (error: ServiceError | null, response: GetPinnedMessagesResponse) => void): ClientUnaryCall;
    getPinnedMessages(request: GetPinnedMessagesRequest, metadata: Metadata, callback: (error: ServiceError | null, response: GetPinnedMessagesResponse) => void): ClientUnaryCall;
    getPinnedMessages(request: GetPinnedMessagesRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: GetPinnedMessagesResponse) => void): ClientUnaryCall;
    addPinnedChannelMessage(request: AddPinnedChannelMessageRequest, callback: (error: ServiceError | null, response: AddPinnedChannelMessageResponse) => void): ClientUnaryCall;
    addPinnedChannelMessage(request: AddPinnedChannelMessageRequest, metadata: Metadata, callback: (error: ServiceError | null, response: AddPinnedChannelMessageResponse) => void): ClientUnaryCall;
    addPinnedChannelMessage(request: AddPinnedChannelMessageRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: AddPinnedChannelMessageResponse) => void): ClientUnaryCall;
    deletePinnedChannelMessage(request: DeletePinnedChannelMessageRequest, callback: (error: ServiceError | null, response: DeletePinnedChannelMessageResponse) => void): ClientUnaryCall;
    deletePinnedChannelMessage(request: DeletePinnedChannelMessageRequest, metadata: Metadata, callback: (error: ServiceError | null, response: DeletePinnedChannelMessageResponse) => void): ClientUnaryCall;
    deletePinnedChannelMessage(request: DeletePinnedChannelMessageRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: DeletePinnedChannelMessageResponse) => void): ClientUnaryCall;
    listGuildEmojis(request: ListGuildEmojisRequest, callback: (error: ServiceError | null, response: ListGuildEmojisResponse) => void): ClientUnaryCall;
    listGuildEmojis(request: ListGuildEmojisRequest, metadata: Metadata, callback: (error: ServiceError | null, response: ListGuildEmojisResponse) => void): ClientUnaryCall;
    listGuildEmojis(request: ListGuildEmojisRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: ListGuildEmojisResponse) => void): ClientUnaryCall;
    getGuildEmoji(request: GetGuildEmojiRequest, callback: (error: ServiceError | null, response: GetGuildEmojiResponse) => void): ClientUnaryCall;
    getGuildEmoji(request: GetGuildEmojiRequest, metadata: Metadata, callback: (error: ServiceError | null, response: GetGuildEmojiResponse) => void): ClientUnaryCall;
    getGuildEmoji(request: GetGuildEmojiRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: GetGuildEmojiResponse) => void): ClientUnaryCall;
    createGuildEmoji(request: CreateGuildEmojiRequest, callback: (error: ServiceError | null, response: CreateGuildEmojiResponse) => void): ClientUnaryCall;
    createGuildEmoji(request: CreateGuildEmojiRequest, metadata: Metadata, callback: (error: ServiceError | null, response: CreateGuildEmojiResponse) => void): ClientUnaryCall;
    createGuildEmoji(request: CreateGuildEmojiRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: CreateGuildEmojiResponse) => void): ClientUnaryCall;
    modifyGuildEmoji(request: ModifyGuildEmojiRequest, callback: (error: ServiceError | null, response: ModifyGuildEmojiResponse) => void): ClientUnaryCall;
    modifyGuildEmoji(request: ModifyGuildEmojiRequest, metadata: Metadata, callback: (error: ServiceError | null, response: ModifyGuildEmojiResponse) => void): ClientUnaryCall;
    modifyGuildEmoji(request: ModifyGuildEmojiRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: ModifyGuildEmojiResponse) => void): ClientUnaryCall;
    deleteGuildEmoji(request: DeleteGuildEmojiRequest, callback: (error: ServiceError | null, response: DeleteGuildEmojiResponse) => void): ClientUnaryCall;
    deleteGuildEmoji(request: DeleteGuildEmojiRequest, metadata: Metadata, callback: (error: ServiceError | null, response: DeleteGuildEmojiResponse) => void): ClientUnaryCall;
    deleteGuildEmoji(request: DeleteGuildEmojiRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: DeleteGuildEmojiResponse) => void): ClientUnaryCall;
    getCurrentUser(request: GetCurrentUserRequest, callback: (error: ServiceError | null, response: GetCurrentUserResponse) => void): ClientUnaryCall;
    getCurrentUser(request: GetCurrentUserRequest, metadata: Metadata, callback: (error: ServiceError | null, response: GetCurrentUserResponse) => void): ClientUnaryCall;
    getCurrentUser(request: GetCurrentUserRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: GetCurrentUserResponse) => void): ClientUnaryCall;
    getUser(request: GetUserRequest, callback: (error: ServiceError | null, response: GetUserResponse) => void): ClientUnaryCall;
    getUser(request: GetUserRequest, metadata: Metadata, callback: (error: ServiceError | null, response: GetUserResponse) => void): ClientUnaryCall;
    getUser(request: GetUserRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: GetUserResponse) => void): ClientUnaryCall;
    modifyCurrentUser(request: ModifyCurrentUserRequest, callback: (error: ServiceError | null, response: ModifyCurrentUserResponse) => void): ClientUnaryCall;
    modifyCurrentUser(request: ModifyCurrentUserRequest, metadata: Metadata, callback: (error: ServiceError | null, response: ModifyCurrentUserResponse) => void): ClientUnaryCall;
    modifyCurrentUser(request: ModifyCurrentUserRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: ModifyCurrentUserResponse) => void): ClientUnaryCall;
    leaveGuild(request: LeaveGuildRequest, callback: (error: ServiceError | null, response: LeaveGuildResponse) => void): ClientUnaryCall;
    leaveGuild(request: LeaveGuildRequest, metadata: Metadata, callback: (error: ServiceError | null, response: LeaveGuildResponse) => void): ClientUnaryCall;
    leaveGuild(request: LeaveGuildRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: LeaveGuildResponse) => void): ClientUnaryCall;
    createDm(request: CreateDmRequest, callback: (error: ServiceError | null, response: CreateDmResponse) => void): ClientUnaryCall;
    createDm(request: CreateDmRequest, metadata: Metadata, callback: (error: ServiceError | null, response: CreateDmResponse) => void): ClientUnaryCall;
    createDm(request: CreateDmRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: CreateDmResponse) => void): ClientUnaryCall;
}
export declare const GatewayRestClient: new (address: string, credentials: ChannelCredentials, options?: Partial<ChannelOptions> | undefined) => GatewayRestClient;
export interface DataLoaderOptions {
    cache?: boolean;
}
export interface DataLoaders {
    rpcDataLoaderOptions?: DataLoaderOptions;
    getDataLoader<T>(identifier: string, constructorFn: () => T): T;
}
