"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GatewayRestClient = exports.GatewayRestService = exports.protobufPackage = void 0;
/* eslint-disable */
const long_1 = __importDefault(require("long"));
const grpc_js_1 = require("@grpc/grpc-js");
const minimal_1 = __importDefault(require("protobufjs/minimal"));
const rest_1 = require("../../discord/v1/rest");
exports.protobufPackage = "pylon.gateway.v1.service";
exports.GatewayRestService = {
    modifyGuild: {
        path: "/pylon.gateway.v1.service.GatewayRest/ModifyGuild",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.ModifyGuildRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.ModifyGuildRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.ModifyGuildResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.ModifyGuildResponse.decode(value),
    },
    createGuildChannel: {
        path: "/pylon.gateway.v1.service.GatewayRest/CreateGuildChannel",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.CreateGuildChannelRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.CreateGuildChannelRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.CreateGuildChannelResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.CreateGuildChannelResponse.decode(value),
    },
    modifyGuildChannelPositions: {
        path: "/pylon.gateway.v1.service.GatewayRest/ModifyGuildChannelPositions",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.ModifyGuildChannelPositionsRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.ModifyGuildChannelPositionsRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.ModifyGuildChannelPositionsResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.ModifyGuildChannelPositionsResponse.decode(value),
    },
    addGuildMember: {
        path: "/pylon.gateway.v1.service.GatewayRest/AddGuildMember",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.AddGuildMemberRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.AddGuildMemberRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.AddGuildMemberResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.AddGuildMemberResponse.decode(value),
    },
    modifyGuildMember: {
        path: "/pylon.gateway.v1.service.GatewayRest/ModifyGuildMember",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.ModifyGuildMemberRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.ModifyGuildMemberRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.ModifyGuildMemberResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.ModifyGuildMemberResponse.decode(value),
    },
    modifyCurrentUserNick: {
        path: "/pylon.gateway.v1.service.GatewayRest/ModifyCurrentUserNick",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.ModifyCurrentUserNickRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.ModifyCurrentUserNickRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.ModifyCurrentUserNickResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.ModifyCurrentUserNickResponse.decode(value),
    },
    addGuildMemberRole: {
        path: "/pylon.gateway.v1.service.GatewayRest/AddGuildMemberRole",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.AddGuildMemberRoleRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.AddGuildMemberRoleRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.AddGuildMemberRoleResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.AddGuildMemberRoleResponse.decode(value),
    },
    removeGuildMemberRole: {
        path: "/pylon.gateway.v1.service.GatewayRest/RemoveGuildMemberRole",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.RemoveGuildMemberRoleRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.RemoveGuildMemberRoleRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.RemoveGuildMemberRoleResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.RemoveGuildMemberRoleResponse.decode(value),
    },
    removeGuildMember: {
        path: "/pylon.gateway.v1.service.GatewayRest/RemoveGuildMember",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.RemoveGuildMemberRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.RemoveGuildMemberRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.RemoveGuildMemberResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.RemoveGuildMemberResponse.decode(value),
    },
    getGuildBans: {
        path: "/pylon.gateway.v1.service.GatewayRest/GetGuildBans",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.GetGuildBansRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.GetGuildBansRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.GetGuildBansResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.GetGuildBansResponse.decode(value),
    },
    getGuildBan: {
        path: "/pylon.gateway.v1.service.GatewayRest/GetGuildBan",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.GetGuildBanRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.GetGuildBanRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.GetGuildBanResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.GetGuildBanResponse.decode(value),
    },
    createGuildBan: {
        path: "/pylon.gateway.v1.service.GatewayRest/CreateGuildBan",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.CreateGuildBanRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.CreateGuildBanRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.CreateGuildBanResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.CreateGuildBanResponse.decode(value),
    },
    removeGuildBan: {
        path: "/pylon.gateway.v1.service.GatewayRest/RemoveGuildBan",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.RemoveGuildBanRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.RemoveGuildBanRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.RemoveGuildBanResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.RemoveGuildBanResponse.decode(value),
    },
    createGuildRole: {
        path: "/pylon.gateway.v1.service.GatewayRest/CreateGuildRole",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.CreateGuildRoleRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.CreateGuildRoleRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.CreateGuildRoleResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.CreateGuildRoleResponse.decode(value),
    },
    modifyGuildRolePositions: {
        path: "/pylon.gateway.v1.service.GatewayRest/ModifyGuildRolePositions",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.ModifyGuildRolePositionsRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.ModifyGuildRolePositionsRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.ModifyGuildRolePositionsResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.ModifyGuildRolePositionsResponse.decode(value),
    },
    modifyGuildRole: {
        path: "/pylon.gateway.v1.service.GatewayRest/ModifyGuildRole",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.ModifyGuildRoleRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.ModifyGuildRoleRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.ModifyGuildRoleResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.ModifyGuildRoleResponse.decode(value),
    },
    deleteGuildRole: {
        path: "/pylon.gateway.v1.service.GatewayRest/DeleteGuildRole",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.DeleteGuildRoleRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.DeleteGuildRoleRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.DeleteGuildRoleResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.DeleteGuildRoleResponse.decode(value),
    },
    getGuildPruneCount: {
        path: "/pylon.gateway.v1.service.GatewayRest/GetGuildPruneCount",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.GetGuildPruneCountRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.GetGuildPruneCountRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.GetGuildPruneCountResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.GetGuildPruneCountResponse.decode(value),
    },
    beginGuildPrune: {
        path: "/pylon.gateway.v1.service.GatewayRest/BeginGuildPrune",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.BeginGuildPruneRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.BeginGuildPruneRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.BeginGuildPruneResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.BeginGuildPruneResponse.decode(value),
    },
    getGuildVoiceRegions: {
        path: "/pylon.gateway.v1.service.GatewayRest/GetGuildVoiceRegions",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.GetGuildVoiceRegionsRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.GetGuildVoiceRegionsRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.GetGuildVoiceRegionsResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.GetGuildVoiceRegionsResponse.decode(value),
    },
    getGuildInvites: {
        path: "/pylon.gateway.v1.service.GatewayRest/GetGuildInvites",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.GetGuildInvitesRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.GetGuildInvitesRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.GetGuildInvitesResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.GetGuildInvitesResponse.decode(value),
    },
    modifyChannel: {
        path: "/pylon.gateway.v1.service.GatewayRest/ModifyChannel",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.ModifyChannelRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.ModifyChannelRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.ModifyChannelResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.ModifyChannelResponse.decode(value),
    },
    deleteChannel: {
        path: "/pylon.gateway.v1.service.GatewayRest/DeleteChannel",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.DeleteChannelRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.DeleteChannelRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.DeleteChannelResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.DeleteChannelResponse.decode(value),
    },
    getChannelMessages: {
        path: "/pylon.gateway.v1.service.GatewayRest/GetChannelMessages",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.GetChannelMessagesRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.GetChannelMessagesRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.GetChannelMessagesResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.GetChannelMessagesResponse.decode(value),
    },
    getChannelMessage: {
        path: "/pylon.gateway.v1.service.GatewayRest/GetChannelMessage",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.GetChannelMessageRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.GetChannelMessageRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.GetChannelMessageResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.GetChannelMessageResponse.decode(value),
    },
    createMessage: {
        path: "/pylon.gateway.v1.service.GatewayRest/CreateMessage",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.CreateMessageRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.CreateMessageRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.CreateMessageResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.CreateMessageResponse.decode(value),
    },
    crosspostMessage: {
        path: "/pylon.gateway.v1.service.GatewayRest/CrosspostMessage",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.CrosspostMessageRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.CrosspostMessageRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.CrosspostMessageResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.CrosspostMessageResponse.decode(value),
    },
    createReaction: {
        path: "/pylon.gateway.v1.service.GatewayRest/CreateReaction",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.CreateReactionRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.CreateReactionRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.CreateReactionResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.CreateReactionResponse.decode(value),
    },
    deleteOwnReaction: {
        path: "/pylon.gateway.v1.service.GatewayRest/DeleteOwnReaction",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.DeleteOwnReactionRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.DeleteOwnReactionRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.DeleteOwnReactionResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.DeleteOwnReactionResponse.decode(value),
    },
    deleteUserReaction: {
        path: "/pylon.gateway.v1.service.GatewayRest/DeleteUserReaction",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.DeleteUserReactionRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.DeleteUserReactionRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.DeleteUserReactionResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.DeleteUserReactionResponse.decode(value),
    },
    deleteAllReactions: {
        path: "/pylon.gateway.v1.service.GatewayRest/DeleteAllReactions",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.DeleteAllReactionsRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.DeleteAllReactionsRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.DeleteAllReactionsResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.DeleteAllReactionsResponse.decode(value),
    },
    deleteAllReactionsForEmoji: {
        path: "/pylon.gateway.v1.service.GatewayRest/DeleteAllReactionsForEmoji",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.DeleteAllReactionsForEmojiRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.DeleteAllReactionsForEmojiRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.DeleteAllReactionsForEmojiResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.DeleteAllReactionsForEmojiResponse.decode(value),
    },
    editMessage: {
        path: "/pylon.gateway.v1.service.GatewayRest/EditMessage",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.EditMessageRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.EditMessageRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.EditMessageResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.EditMessageResponse.decode(value),
    },
    deleteMessage: {
        path: "/pylon.gateway.v1.service.GatewayRest/DeleteMessage",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.DeleteMessageRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.DeleteMessageRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.DeleteMessageResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.DeleteMessageResponse.decode(value),
    },
    bulkDeleteMessages: {
        path: "/pylon.gateway.v1.service.GatewayRest/BulkDeleteMessages",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.BulkDeleteMessagesRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.BulkDeleteMessagesRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.BulkDeleteMessagesResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.BulkDeleteMessagesResponse.decode(value),
    },
    editChannelPermissions: {
        path: "/pylon.gateway.v1.service.GatewayRest/EditChannelPermissions",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.EditChannelPermissionsRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.EditChannelPermissionsRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.EditChannelPermissionsResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.EditChannelPermissionsResponse.decode(value),
    },
    getChannelInvites: {
        path: "/pylon.gateway.v1.service.GatewayRest/GetChannelInvites",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.GetChannelInvitesRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.GetChannelInvitesRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.GetChannelInvitesResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.GetChannelInvitesResponse.decode(value),
    },
    createChannelInvite: {
        path: "/pylon.gateway.v1.service.GatewayRest/CreateChannelInvite",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.CreateChannelInviteRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.CreateChannelInviteRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.CreateChannelInviteResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.CreateChannelInviteResponse.decode(value),
    },
    deleteChannelPermission: {
        path: "/pylon.gateway.v1.service.GatewayRest/DeleteChannelPermission",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.DeleteChannelPermissionRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.DeleteChannelPermissionRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.DeleteChannelPermissionResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.DeleteChannelPermissionResponse.decode(value),
    },
    followNewsChannel: {
        path: "/pylon.gateway.v1.service.GatewayRest/FollowNewsChannel",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.FollowNewsChannelRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.FollowNewsChannelRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.FollowNewsChannelResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.FollowNewsChannelResponse.decode(value),
    },
    triggerTypingIndicator: {
        path: "/pylon.gateway.v1.service.GatewayRest/TriggerTypingIndicator",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.TriggerTypingIndicatorRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.TriggerTypingIndicatorRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.TriggerTypingIndicatorResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.TriggerTypingIndicatorResponse.decode(value),
    },
    getPinnedMessages: {
        path: "/pylon.gateway.v1.service.GatewayRest/GetPinnedMessages",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.GetPinnedMessagesRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.GetPinnedMessagesRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.GetPinnedMessagesResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.GetPinnedMessagesResponse.decode(value),
    },
    addPinnedChannelMessage: {
        path: "/pylon.gateway.v1.service.GatewayRest/AddPinnedChannelMessage",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.AddPinnedChannelMessageRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.AddPinnedChannelMessageRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.AddPinnedChannelMessageResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.AddPinnedChannelMessageResponse.decode(value),
    },
    deletePinnedChannelMessage: {
        path: "/pylon.gateway.v1.service.GatewayRest/DeletePinnedChannelMessage",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.DeletePinnedChannelMessageRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.DeletePinnedChannelMessageRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.DeletePinnedChannelMessageResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.DeletePinnedChannelMessageResponse.decode(value),
    },
    listGuildEmojis: {
        path: "/pylon.gateway.v1.service.GatewayRest/ListGuildEmojis",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.ListGuildEmojisRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.ListGuildEmojisRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.ListGuildEmojisResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.ListGuildEmojisResponse.decode(value),
    },
    getGuildEmoji: {
        path: "/pylon.gateway.v1.service.GatewayRest/GetGuildEmoji",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.GetGuildEmojiRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.GetGuildEmojiRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.GetGuildEmojiResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.GetGuildEmojiResponse.decode(value),
    },
    createGuildEmoji: {
        path: "/pylon.gateway.v1.service.GatewayRest/CreateGuildEmoji",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.CreateGuildEmojiRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.CreateGuildEmojiRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.CreateGuildEmojiResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.CreateGuildEmojiResponse.decode(value),
    },
    modifyGuildEmoji: {
        path: "/pylon.gateway.v1.service.GatewayRest/ModifyGuildEmoji",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.ModifyGuildEmojiRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.ModifyGuildEmojiRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.ModifyGuildEmojiResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.ModifyGuildEmojiResponse.decode(value),
    },
    deleteGuildEmoji: {
        path: "/pylon.gateway.v1.service.GatewayRest/DeleteGuildEmoji",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.DeleteGuildEmojiRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.DeleteGuildEmojiRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.DeleteGuildEmojiResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.DeleteGuildEmojiResponse.decode(value),
    },
    getCurrentUser: {
        path: "/pylon.gateway.v1.service.GatewayRest/GetCurrentUser",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.GetCurrentUserRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.GetCurrentUserRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.GetCurrentUserResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.GetCurrentUserResponse.decode(value),
    },
    getUser: {
        path: "/pylon.gateway.v1.service.GatewayRest/GetUser",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.GetUserRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.GetUserRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.GetUserResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.GetUserResponse.decode(value),
    },
    modifyCurrentUser: {
        path: "/pylon.gateway.v1.service.GatewayRest/ModifyCurrentUser",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.ModifyCurrentUserRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.ModifyCurrentUserRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.ModifyCurrentUserResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.ModifyCurrentUserResponse.decode(value),
    },
    leaveGuild: {
        path: "/pylon.gateway.v1.service.GatewayRest/LeaveGuild",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.LeaveGuildRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.LeaveGuildRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.LeaveGuildResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.LeaveGuildResponse.decode(value),
    },
    createDm: {
        path: "/pylon.gateway.v1.service.GatewayRest/CreateDm",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(rest_1.CreateDmRequest.encode(value).finish()),
        requestDeserialize: (value) => rest_1.CreateDmRequest.decode(value),
        responseSerialize: (value) => Buffer.from(rest_1.CreateDmResponse.encode(value).finish()),
        responseDeserialize: (value) => rest_1.CreateDmResponse.decode(value),
    },
};
exports.GatewayRestClient = grpc_js_1.makeGenericClientConstructor(exports.GatewayRestService, "pylon.gateway.v1.service.GatewayRest");
if (minimal_1.default.util.Long !== long_1.default) {
    minimal_1.default.util.Long = long_1.default;
    minimal_1.default.configure();
}
