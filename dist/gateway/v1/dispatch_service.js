"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GatewayDispatchClient = exports.GatewayDispatchService = exports.GatewayDispatchStreamingClient = exports.GatewayDispatchStreamingService = exports.protobufPackage = void 0;
/* eslint-disable */
const long_1 = __importDefault(require("long"));
const grpc_js_1 = require("@grpc/grpc-js");
const minimal_1 = __importDefault(require("protobufjs/minimal"));
const event_1 = require("../../discord/v1/event");
exports.protobufPackage = "pylon.gateway.v1.service";
exports.GatewayDispatchStreamingService = {
    event: {
        path: "/pylon.gateway.v1.service.GatewayDispatchStreaming/Event",
        requestStream: true,
        responseStream: true,
        requestSerialize: (value) => Buffer.from(event_1.EventEnvelope.encode(value).finish()),
        requestDeserialize: (value) => event_1.EventEnvelope.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventEnvelopeAck.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventEnvelopeAck.decode(value),
    },
};
exports.GatewayDispatchStreamingClient = grpc_js_1.makeGenericClientConstructor(exports.GatewayDispatchStreamingService, "pylon.gateway.v1.service.GatewayDispatchStreaming");
exports.GatewayDispatchService = {
    guildCreate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/GuildCreate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.GuildCreateEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.GuildCreateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    guildUpdate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/GuildUpdate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.GuildUpdateEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.GuildUpdateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    guildDelete: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/GuildDelete",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.GuildDeleteEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.GuildDeleteEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    presenceUpdate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/PresenceUpdate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.PresenceUpdateEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.PresenceUpdateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    guildMemberAdd: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/GuildMemberAdd",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.GuildMemberAddEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.GuildMemberAddEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    guildMemberUpdate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/GuildMemberUpdate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.GuildMemberUpdateEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.GuildMemberUpdateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    guildMemberRemove: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/GuildMemberRemove",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.GuildMemberRemoveEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.GuildMemberRemoveEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    channelCreate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/ChannelCreate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.ChannelCreateEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.ChannelCreateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    channelUpdate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/ChannelUpdate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.ChannelUpdateEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.ChannelUpdateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    channelDelete: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/ChannelDelete",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.ChannelDeleteEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.ChannelDeleteEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    channelPinsUpdate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/ChannelPinsUpdate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.ChannelPinsUpdateEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.ChannelPinsUpdateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    guildRoleCreate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/GuildRoleCreate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.GuildRoleCreateEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.GuildRoleCreateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    guildRoleUpdate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/GuildRoleUpdate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.GuildRoleUpdateEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.GuildRoleUpdateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    guildRoleDelete: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/GuildRoleDelete",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.GuildRoleDeleteEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.GuildRoleDeleteEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    messageCreate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/MessageCreate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.MessageCreateEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.MessageCreateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    messageUpdate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/MessageUpdate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.MessageUpdateEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.MessageUpdateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    messageDelete: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/MessageDelete",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.MessageDeleteEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.MessageDeleteEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    messageDeleteBulk: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/MessageDeleteBulk",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.MessageDeleteBulkEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.MessageDeleteBulkEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    messageReactionAdd: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/MessageReactionAdd",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.MessageReactionAddEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.MessageReactionAddEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    messageReactionRemove: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/MessageReactionRemove",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.MessageReactionRemoveEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.MessageReactionRemoveEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    messageReactionRemoveAll: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/MessageReactionRemoveAll",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.MessageReactionRemoveAllEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.MessageReactionRemoveAllEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    messageReactionRemoveEmoji: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/MessageReactionRemoveEmoji",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.MessageReactionRemoveEmojiEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.MessageReactionRemoveEmojiEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    typingStart: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/TypingStart",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.TypingStartEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.TypingStartEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    voiceStateUpdate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/VoiceStateUpdate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.VoiceStateUpdateEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.VoiceStateUpdateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    voiceServerUpdate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/VoiceServerUpdate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.VoiceServerUpdateEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.VoiceServerUpdateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    inviteCreate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/InviteCreate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.InviteCreateEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.InviteCreateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    inviteDelete: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/InviteDelete",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.InviteDeleteEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.InviteDeleteEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    guildBanAdd: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/GuildBanAdd",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.GuildBanAddEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.GuildBanAddEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    guildBanRemove: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/GuildBanRemove",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.GuildBanRemoveEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.GuildBanRemoveEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    guildEmojisUpdate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/GuildEmojisUpdate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.GuildEmojisUpdateEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.GuildEmojisUpdateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    guildIntegrationsUpdate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/GuildIntegrationsUpdate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.GuildIntegrationsUpdateEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.GuildIntegrationsUpdateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    webhooksUpdate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/WebhooksUpdate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.WebhooksUpdateEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.WebhooksUpdateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    integrationCreate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/IntegrationCreate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.IntegrationCreateEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.IntegrationCreateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    integrationUpdate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/IntegrationUpdate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.IntegrationUpdateEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.IntegrationUpdateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    integrationDelete: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/IntegrationDelete",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.IntegrationDeleteEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.IntegrationDeleteEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.EventResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.EventResponse.decode(value),
    },
    interactionCreate: {
        path: "/pylon.gateway.v1.service.GatewayDispatch/InteractionCreate",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(event_1.InteractionCreateEvent.encode(value).finish()),
        requestDeserialize: (value) => event_1.InteractionCreateEvent.decode(value),
        responseSerialize: (value) => Buffer.from(event_1.InteractionResponse.encode(value).finish()),
        responseDeserialize: (value) => event_1.InteractionResponse.decode(value),
    },
};
exports.GatewayDispatchClient = grpc_js_1.makeGenericClientConstructor(exports.GatewayDispatchService, "pylon.gateway.v1.service.GatewayDispatch");
if (minimal_1.default.util.Long !== long_1.default) {
    minimal_1.default.util.Long = long_1.default;
    minimal_1.default.configure();
}
